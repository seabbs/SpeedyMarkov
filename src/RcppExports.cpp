// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ArmaMarkovLoop
arma::mat ArmaMarkovLoop(arma::mat sim, arma::rowvec cohort, arma::mat transition, int duration);
RcppExport SEXP _SpeedyMarkov_ArmaMarkovLoop(SEXP simSEXP, SEXP cohortSEXP, SEXP transitionSEXP, SEXP durationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type sim(simSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cohort(cohortSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type transition(transitionSEXP);
    Rcpp::traits::input_parameter< int >::type duration(durationSEXP);
    rcpp_result_gen = Rcpp::wrap(ArmaMarkovLoop(sim, cohort, transition, duration));
    return rcpp_result_gen;
END_RCPP
}
// ArmaSimulateMarkov
Rcpp::List ArmaSimulateMarkov(arma::mat sim, arma::rowvec cohort, arma::mat transition, int duration, arma::colvec state_cost, arma::vec discounting, arma::colvec qalys, double intervention_cost);
RcppExport SEXP _SpeedyMarkov_ArmaSimulateMarkov(SEXP simSEXP, SEXP cohortSEXP, SEXP transitionSEXP, SEXP durationSEXP, SEXP state_costSEXP, SEXP discountingSEXP, SEXP qalysSEXP, SEXP intervention_costSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type sim(simSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cohort(cohortSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type transition(transitionSEXP);
    Rcpp::traits::input_parameter< int >::type duration(durationSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type state_cost(state_costSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type discounting(discountingSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type qalys(qalysSEXP);
    Rcpp::traits::input_parameter< double >::type intervention_cost(intervention_costSEXP);
    rcpp_result_gen = Rcpp::wrap(ArmaSimulateMarkov(sim, cohort, transition, duration, state_cost, discounting, qalys, intervention_cost));
    return rcpp_result_gen;
END_RCPP
}
// ArmaTDMarkovLoop
arma::mat ArmaTDMarkovLoop(arma::mat m_TR, arma::cube& a_P);
RcppExport SEXP _SpeedyMarkov_ArmaTDMarkovLoop(SEXP m_TRSEXP, SEXP a_PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type m_TR(m_TRSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type a_P(a_PSEXP);
    rcpp_result_gen = Rcpp::wrap(ArmaTDMarkovLoop(m_TR, a_P));
    return rcpp_result_gen;
END_RCPP
}
// MatrixArrange
Rcpp::List MatrixArrange(Rcpp::List samples);
RcppExport SEXP _SpeedyMarkov_MatrixArrange(SEXP samplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type samples(samplesSEXP);
    rcpp_result_gen = Rcpp::wrap(MatrixArrange(samples));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SpeedyMarkov_ArmaMarkovLoop", (DL_FUNC) &_SpeedyMarkov_ArmaMarkovLoop, 4},
    {"_SpeedyMarkov_ArmaSimulateMarkov", (DL_FUNC) &_SpeedyMarkov_ArmaSimulateMarkov, 8},
    {"_SpeedyMarkov_ArmaTDMarkovLoop", (DL_FUNC) &_SpeedyMarkov_ArmaTDMarkovLoop, 2},
    {"_SpeedyMarkov_MatrixArrange", (DL_FUNC) &_SpeedyMarkov_MatrixArrange, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_SpeedyMarkov(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
